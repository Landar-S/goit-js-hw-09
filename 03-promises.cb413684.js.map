{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAGtC,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,IAIRU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBF,YACE,IACEI,EAAAlB,GAASmB,OAAOC,QACd,uBAAqBL,QAAiBC,QACrCA,EACL,IAGHK,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MAClBF,YACE,IACEI,EAAAlB,GAASmB,OAAOG,QACd,sBAAoBP,QAAeC,QACpCA,EACH,G,CA/BRd,EAAOqB,iBAAiB,UAoCxB,SAAsBC,GACpBA,EAAEC,iBAEF,MAAMC,EAAW,CACfC,SAAUC,OAAO1B,EAAO2B,SAASb,MAAMc,OACvCC,KAAMH,OAAO1B,EAAO2B,SAASE,KAAKD,OAClCE,OAAQJ,OAAO1B,EAAO2B,SAASG,OAAOF,QAGxC,GAAIJ,EAASC,SAAW,GAAKD,EAASK,KAAO,GAAKL,EAASM,OAAS,EAClE,OAGF,IAAK,IAAIjB,EAAW,EAAGA,GAAYW,EAASM,OAAQjB,GAAY,EAC9DV,EAAcU,EAAUW,EAASC,UAEjCD,EAASC,UAAYD,EAASK,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onSubmitForm);\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      setTimeout(\n        () =>\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          ),\n        delay\n      );\n    })\n    .catch(({ position, delay }) => {\n      setTimeout(\n        () =>\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          ),\n        delay\n      );\n    });\n}\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  const formData = {\n    newDelay: Number(formEl.elements.delay.value),\n    step: Number(formEl.elements.step.value),\n    amount: Number(formEl.elements.amount.value),\n  };\n\n  if (formData.newDelay < 0 || formData.step < 0 || formData.amount < 1) {\n    return;\n  }\n\n  for (let position = 1; position <= formData.amount; position += 1) {\n    createPromise(position, formData.newDelay);\n\n    formData.newDelay += formData.step;\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","$parcel$interopDefault","Notify","success","catch","failure","addEventListener","e","preventDefault","formData","newDelay","Number","elements","value","step","amount"],"version":3,"file":"03-promises.cb413684.js.map"}